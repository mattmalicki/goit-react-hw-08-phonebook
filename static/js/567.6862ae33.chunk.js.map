{"version":3,"file":"static/js/567.6862ae33.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","redux/filters/selectors.js","components/atoms/NameInput/NameInput.jsx","components/atoms/NumberInput/NumberInput.jsx","components/organisms/ContactForm/ContactForm.jsx","components/atoms/DeleteButton/DeleteButton.jsx","components/molecules/ContactsListItem/ContactsListItem.jsx","components/organisms/ContactList/ContactsList.jsx","components/molecules/NameFilter/NameFilter.jsx","components/organisms/Filters/Filters.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nimport { selectFilterName } from 'redux/filters/selectors';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterName],\n  (contacts, filterName) => {\n    return {\n      items: contacts.filter(obj =>\n        obj.name.toLowerCase().includes(filterName)\n      ),\n      inPhonebook: contacts.length,\n    };\n  }\n);\n","export const selectFilterName = state => state.filter.name;\n","export const NameInput = ({ defaultValue = '' }) => {\n  return (\n    <input\n      type=\"text\"\n      name=\"name\"\n      pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      required={true}\n      defaultValue={defaultValue}\n    />\n  );\n};\n","export const NumberInput = ({ defaultValue = '' }) => {\n  return (\n    <input\n      name=\"number\"\n      type=\"tel\"\n      pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      required={true}\n      defaultValue={defaultValue}\n    />\n  );\n};\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nimport { NameInput } from 'components/atoms/NameInput/NameInput';\nimport { NumberInput } from 'components/atoms/NumberInput/NumberInput';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const isInPhonebook = name => {\n    return contacts.filter(contact => contact.name === name).length >= 1;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    if (isInPhonebook(form.name.value)) {\n      console.log('This contact is already in your phonebook.');\n      return;\n    }\n    dispatch(addContact({ name: form.name.value, number: form.number.value }));\n    form.reset();\n  };\n  return (\n    <form onSubmit={handleSubmit}>\n      <NameInput />\n      <NumberInput />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n};\n","export const DeleteButton = ({ onClick }) => {\n  return (\n    <button type=\"button\" onClick={onClick}>\n      <svg width=\"20\" height=\"20\">\n        <path d={deleteIcon} />\n      </svg>\n    </button>\n  );\n};\n\nconst deleteIcon =\n  'M8 21.5v-11a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v11c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5zm4 0v-11a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v11c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5zm4 0v-11a.5.5 0 0 0-.5-.5h-1a.5.5 0 0 0-.5.5v11c0 .28.22.5.5.5h1a.5.5 0 0 0 .5-.5zM7.5 6h7l-.75-1.83a.6.6 0 0 0-.27-.17H8.53c-.1.02-.22.1-.27.17zm14.5.5v1a.5.5 0 0 1-.5.5H20v14.81c0 1.72-1.13 3.19-2.5 3.19h-13C3.12 26 2 24.6 2 22.87V8H.5a.5.5 0 0 1-.5-.5v-1c0-.28.22-.5.5-.5h4.83l1.1-2.61a2.43 2.43 0 0 1 2.07-1.4h5c.83 0 1.77.63 2.08 1.4l1.1 2.6h4.82c.28 0 .5.23.5.5z';\n","import { useDispatch } from 'react-redux';\n\nimport { deleteContact, updateContact } from 'redux/contacts/operations';\n\nimport { NameInput } from 'components/atoms/NameInput/NameInput';\nimport { NumberInput } from 'components/atoms/NumberInput/NumberInput';\nimport { DeleteButton } from 'components/atoms/DeleteButton/DeleteButton';\n\nexport const ContactsListItem = ({ contact, expand = false }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => {\n    dispatch(deleteContact(contact.id));\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    dispatch(\n      updateContact({\n        id: contact.id,\n        name: form.name.value,\n        number: form.number.value,\n      })\n    );\n  };\n  return (\n    <li id={contact.id}>\n      {expand ? (\n        <form onSubmit={handleSubmit}>\n          <NameInput defaultValue={contact.name} />\n          <NumberInput defaultValue={contact.number} />\n          <button type=\"submit\">Update contact</button>\n        </form>\n      ) : (\n        <div>\n          <span>{contact.name}</span>\n          <span>{contact.number}</span>\n        </div>\n      )}\n      <div>\n        <DeleteButton onClick={handleDelete} />\n      </div>\n    </li>\n  );\n};\n","import { useState } from 'react';\nimport { useSelector } from 'react-redux/es/hooks/useSelector';\n\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { ContactsListItem } from 'components/molecules/ContactsListItem/ContactsListItem';\n\nexport const ContactsList = () => {\n  const contacts = useSelector(selectVisibleContacts).items;\n  const [expandId, setExpandId] = useState('');\n  const handleClick = event => {\n    const liElement = event.target.closest('li');\n    if (event.target.nodeName === 'UL') {\n      setExpandId('');\n      return;\n    }\n    setExpandId(liElement.id);\n  };\n  return (\n    <ul onClick={handleClick}>\n      {contacts.map(contact => (\n        <ContactsListItem\n          key={contact.id}\n          contact={contact}\n          expand={expandId === contact.id}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { useDispatch } from 'react-redux';\n\nimport { changeFilterName } from 'redux/filters/slice';\n\nexport const NameFilter = () => {\n  const dispatch = useDispatch();\n  const handleChange = event => {\n    dispatch(changeFilterName(event.target.value));\n  };\n  return (\n    <div>\n      <p>Find contacts by name:</p>\n      <input type=\"text\" onChange={handleChange} />\n    </div>\n  );\n};\n","import { NameFilter } from 'components/molecules/NameFilter/NameFilter';\n\nexport const Filters = () => {\n  return (\n    <div>\n      <NameFilter />\n    </div>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nimport { ContactForm } from 'components/organisms/ContactForm/ContactForm';\nimport { ContactsList } from 'components/organisms/ContactList/ContactsList';\nimport { Filters } from 'components/organisms/Filters/Filters';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contactsAmount = useSelector(selectVisibleContacts).inPhonebook;\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <div>\n      <ContactForm />\n      {contactsAmount > 0 && <Filters />}\n      <ContactsList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectVisibleContacts","filter","filterName","obj","toLowerCase","includes","inPhonebook","NameInput","_ref","_ref$defaultValue","defaultValue","_jsx","type","pattern","title","required","NumberInput","ContactForm","dispatch","useDispatch","useSelector","_jsxs","onSubmit","event","preventDefault","form","currentTarget","contact","console","log","addContact","number","reset","children","DeleteButton","onClick","width","height","d","deleteIcon","ContactsListItem","_ref$expand","expand","id","updateContact","deleteContact","ContactsList","_useState","useState","_useState2","_slicedToArray","expandId","setExpandId","liElement","target","closest","nodeName","NameFilter","onChange","changeFilterName","Filters","contactsAmount","useEffect","fetchContacts"],"sourceRoot":""}